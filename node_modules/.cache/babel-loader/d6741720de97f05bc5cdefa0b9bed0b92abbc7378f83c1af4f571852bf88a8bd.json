{"ast":null,"code":"import { useEffect, useCallback } from \"react\";\nconst DUMMY_MEALS = [{\n  id: \"m1\",\n  name: \"Sushi\",\n  description: \"Finest fish and veggies\",\n  price: 22.99\n}, {\n  id: \"m2\",\n  name: \"Schnitzel\",\n  description: \"A german specialty!\",\n  price: 16.5\n}, {\n  id: \"m3\",\n  name: \"Barbecue Burger\",\n  description: \"American, raw, meaty\",\n  price: 12.99\n}, {\n  id: \"m4\",\n  name: \"Green Bowl\",\n  description: \"Healthy...and green...\",\n  price: 18.99\n}];\nuseEffect(() => {\n  fetchfoodhandler();\n}, []);\nconst fetchfoodhandler = useCallback(async () => {\n  try {\n    const response = await fetch(\"https://react-http-be4bf-default-rtdb.firebaseio.com/food.json\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(DUMMY_MEALS)\n    });\n    if (!response.ok) {\n      throw new Error(\"Something went wrong!\");\n    }\n    const data = await response.json();\n    console.log(data);\n\n    // const loadedMovies = [];\n\n    // for (const key in data) {\n    //   loadedMovies.push({\n    //     id: key,\n    //     title: data[key].title,\n    //     openingText: data[key].openingText,\n    //     releaseDate: data[key].releaseDate,\n    //   });\n    // }\n\n    // const transformedMovies = data.movies.map((movieData) => {\n    //   return {\n    //     id: movieData.name,\n    //     title: movieData.title,\n    //     openingText: movieData.openingText,\n    //     releaseDate: movieData.releaseDate,\n    //   };\n    // });\n  } catch (error) {\n    setError(error.message);\n  }\n}, []);\nexport default DUMMY_MEALS;","map":{"version":3,"names":["useEffect","useCallback","DUMMY_MEALS","id","name","description","price","fetchfoodhandler","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","error","setError","message"],"sources":["C:/Users/HABEEB SHOLANKE/Desktop/foodapp/src/component/meal/DummyMeals.js"],"sourcesContent":["import { useEffect, useCallback } from \"react\";\r\n\r\nconst DUMMY_MEALS = [\r\n  {\r\n    id: \"m1\",\r\n    name: \"Sushi\",\r\n    description: \"Finest fish and veggies\",\r\n    price: 22.99,\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    name: \"Schnitzel\",\r\n    description: \"A german specialty!\",\r\n    price: 16.5,\r\n  },\r\n  {\r\n    id: \"m3\",\r\n    name: \"Barbecue Burger\",\r\n    description: \"American, raw, meaty\",\r\n    price: 12.99,\r\n  },\r\n  {\r\n    id: \"m4\",\r\n    name: \"Green Bowl\",\r\n    description: \"Healthy...and green...\",\r\n    price: 18.99,\r\n  },\r\n];\r\n\r\nuseEffect(() => {\r\n  fetchfoodhandler();\r\n}, []);\r\n\r\nconst fetchfoodhandler = useCallback(async () => {\r\n  try {\r\n    const response = await fetch(\r\n      \"https://react-http-be4bf-default-rtdb.firebaseio.com/food.json\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(DUMMY_MEALS),\r\n      }\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(\"Something went wrong!\");\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log(data);\r\n\r\n    // const loadedMovies = [];\r\n\r\n    // for (const key in data) {\r\n    //   loadedMovies.push({\r\n    //     id: key,\r\n    //     title: data[key].title,\r\n    //     openingText: data[key].openingText,\r\n    //     releaseDate: data[key].releaseDate,\r\n    //   });\r\n    // }\r\n\r\n    // const transformedMovies = data.movies.map((movieData) => {\r\n    //   return {\r\n    //     id: movieData.name,\r\n    //     title: movieData.title,\r\n    //     openingText: movieData.openingText,\r\n    //     releaseDate: movieData.releaseDate,\r\n    //   };\r\n    // });\r\n  } catch (error) {\r\n    setError(error.message);\r\n  }\r\n}, []);\r\n\r\nexport default DUMMY_MEALS;\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAE9C,MAAMC,WAAW,GAAG,CAClB;EACEC,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,OAAO;EACbC,WAAW,EAAE,yBAAyB;EACtCC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,WAAW;EACjBC,WAAW,EAAE,qBAAqB;EAClCC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,iBAAiB;EACvBC,WAAW,EAAE,sBAAsB;EACnCC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,YAAY;EAClBC,WAAW,EAAE,wBAAwB;EACrCC,KAAK,EAAE;AACT,CAAC,CACF;AAEDN,SAAS,CAAC,MAAM;EACdO,gBAAgB,EAAE;AACpB,CAAC,EAAE,EAAE,CAAC;AAEN,MAAMA,gBAAgB,GAAGN,WAAW,CAAC,YAAY;EAC/C,IAAI;IACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAAgE,EAChE;MACEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,WAAW;IAClC,CAAC,CACF;IACD,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,EAAE;IAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;;IAEjB;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,QAAQ,CAACD,KAAK,CAACE,OAAO,CAAC;EACzB;AACF,CAAC,EAAE,EAAE,CAAC;AAEN,eAAerB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}