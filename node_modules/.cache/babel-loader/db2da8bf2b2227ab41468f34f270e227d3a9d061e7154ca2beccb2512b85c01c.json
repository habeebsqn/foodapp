{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalAmount: 0\n  },\n  reducers: {\n    addItemHandler(currentState, action) {\n      const newItem = action.payload;\n      currentState.totalAmount = currentState.totalAmount + newItem.item.price * newItem.amount;\n      const existingCartItemIndex = currentState.items.findIndex(item => item.id === newItem.id);\n      const existingCartItem = currentState.items[existingCartItemIndex];\n      let updateCartItems;\n      if (existingCartItem) {\n        const updateItemAmt = {\n          ...existingCartItem,\n          amount: existingCartItem.amount + newItem.amount\n        };\n        updateCartItems = [...currentState.items];\n        currentState.items[existingCartItemIndex] = updateItemAmt;\n      } else {\n        currentState.items.concat(newItem);\n      }\n    }\n  }\n});\nexport const cartSliceAction = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalAmount","reducers","addItemHandler","currentState","action","newItem","payload","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updateCartItems","updateItemAmt","concat","cartSliceAction","actions"],"sources":["C:/Users/HABEEB SHOLANKE/Desktop/foodapp/src/store/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalAmount: 0,\r\n  },\r\n  reducers: {\r\n    addItemHandler(currentState, action) {\r\n      const newItem = action.payload;\r\n      currentState.totalAmount =\r\n        currentState.totalAmount + newItem.item.price * newItem.amount;\r\n\r\n        const existingCartItemIndex = currentState.items.findIndex(\r\n            (item) => item.id === newItem.id\r\n          )\r\n\r\n          const existingCartItem = currentState.items[existingCartItemIndex];\r\n\r\n          let updateCartItems;\r\n          if (existingCartItem) {\r\n            const updateItemAmt = {\r\n                \r\n             ...existingCartItem,\r\n              amount: existingCartItem.amount + newItem.amount,\r\n            };\r\n            updateCartItems = [...currentState.items];\r\n            currentState.items[existingCartItemIndex] = updateItemAmt;\r\n          }else {\r\n             currentState.items.concat(newItem);\r\n          }\r\n          \r\n    },\r\n  },\r\n});\r\n\r\nexport const cartSliceAction = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE;IACRC,cAAc,CAACC,YAAY,EAAEC,MAAM,EAAE;MACnC,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9BH,YAAY,CAACH,WAAW,GACtBG,YAAY,CAACH,WAAW,GAAGK,OAAO,CAACE,IAAI,CAACC,KAAK,GAAGH,OAAO,CAACI,MAAM;MAE9D,MAAMC,qBAAqB,GAAGP,YAAY,CAACJ,KAAK,CAACY,SAAS,CACrDJ,IAAI,IAAKA,IAAI,CAACK,EAAE,KAAKP,OAAO,CAACO,EAAE,CACjC;MAED,MAAMC,gBAAgB,GAAGV,YAAY,CAACJ,KAAK,CAACW,qBAAqB,CAAC;MAElE,IAAII,eAAe;MACnB,IAAID,gBAAgB,EAAE;QACpB,MAAME,aAAa,GAAG;UAErB,GAAGF,gBAAgB;UAClBJ,MAAM,EAAEI,gBAAgB,CAACJ,MAAM,GAAGJ,OAAO,CAACI;QAC5C,CAAC;QACDK,eAAe,GAAG,CAAC,GAAGX,YAAY,CAACJ,KAAK,CAAC;QACzCI,YAAY,CAACJ,KAAK,CAACW,qBAAqB,CAAC,GAAGK,aAAa;MAC3D,CAAC,MAAK;QACHZ,YAAY,CAACJ,KAAK,CAACiB,MAAM,CAACX,OAAO,CAAC;MACrC;IAEN;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMY,eAAe,GAAGrB,SAAS,CAACsB,OAAO;AAEhD,eAAetB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}